{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ABC","SORT_BY_LENGTH","App","useState","sortGoods","setSortGoods","reverse","setReverse","actualGoods","setActualGoods","changeActualGoods","actual","sort","isReverse","reset","preparedGoods","good1","good2","localeCompare","length","className","type","cn","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAc,iBACdC,EAAiB,SAEVC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsCJ,mBAASJ,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAEA,SAASC,EAAkBC,EAA3B,GAAgE,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MAC9CC,EAAa,YAAOJ,GAE1B,OAAc,IAAVG,GACFL,EAAeE,GACfN,EAAa,IACbE,GAAW,GAEJI,IAGLC,GACFG,EAAcH,MAAK,SAACI,EAAOC,GACzB,OAAQL,GACN,KAAKZ,EAGH,OAFAK,EAAaL,GAENgB,EAAME,cAAcD,GAE7B,KAAKhB,EAGH,OAFAI,EAAaJ,GAENe,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXN,GACFE,EAAcT,UAGhBG,EAAeM,GAERA,GAGT,OACE,sBAAKK,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAG,iBAAkB,CAAE,WAAYlB,IAAcJ,IAEnDuB,QAAS,kBAAMb,EACbX,EACA,CAAEa,KAAMZ,EAAaa,UAAWP,KAPpC,iCAaA,wBACEe,KAAK,SACLD,UACEE,IAAG,oBAAqB,CACtB,WAAYlB,IAAcH,IAG9BsB,QAAS,kBAAMb,EACbX,EACA,CAAEa,KAAMX,EAAgBY,UAAWP,KATvC,4BAeA,wBACEe,KAAK,SACLD,UACEE,IAAG,oBAAqB,CAAE,YAAwB,IAAZhB,IAExCiB,QAAS,WAELhB,GADc,IAAZD,GAMJI,EACEX,EACA,CAAEa,KAAMR,EAAWS,WAAYP,KAdrC,qBAqBCkB,KAAKC,UAAUjB,KAAiBgB,KAAKC,UAAU1B,IAC9C,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPd,EACEC,EAAkBX,EAAiB,CAAEe,OAAO,MALlD,sBAcJ,6BACGN,EAAYkB,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCnI1CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.99ed3e75.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ABC = 'alphabetically';\nconst SORT_BY_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortGoods, setSortGoods] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const [actualGoods, setActualGoods] = useState(goodsFromServer);\n\n  function changeActualGoods(actual, { sort, isReverse, reset }) {\n    const preparedGoods = [...actual];\n\n    if (reset === true) {\n      setActualGoods(actual);\n      setSortGoods('');\n      setReverse(false);\n\n      return actual;\n    }\n\n    if (sort) {\n      preparedGoods.sort((good1, good2) => {\n        switch (sort) {\n          case SORT_BY_ABC:\n            setSortGoods(SORT_BY_ABC);\n\n            return good1.localeCompare(good2);\n\n          case SORT_BY_LENGTH:\n            setSortGoods(SORT_BY_LENGTH);\n\n            return good1.length - good2.length;\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReverse) {\n      preparedGoods.reverse();\n    }\n\n    setActualGoods(preparedGoods);\n\n    return preparedGoods;\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info', { 'is-light': sortGoods !== SORT_BY_ABC })\n          }\n          onClick={() => changeActualGoods(\n            goodsFromServer,\n            { sort: SORT_BY_ABC, isReverse: reverse },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success', {\n              'is-light': sortGoods !== SORT_BY_LENGTH,\n            })\n          }\n          onClick={() => changeActualGoods(\n            goodsFromServer,\n            { sort: SORT_BY_LENGTH, isReverse: reverse },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning', { 'is-light': reverse === false })\n          }\n          onClick={() => {\n            if (reverse === false) {\n              setReverse(true);\n            } else {\n              setReverse(false);\n            }\n\n            changeActualGoods(\n              goodsFromServer,\n              { sort: sortGoods, isReverse: !reverse },\n            );\n          }}\n        >\n          Reverse\n        </button>\n\n        {JSON.stringify(actualGoods) !== JSON.stringify(goodsFromServer) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setActualGoods(\n                changeActualGoods(goodsFromServer, { reset: true }),\n              );\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {actualGoods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}